<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e7d0ce36-92fd-4b28-abeb-7d66f569a1be" name="Changes" comment="example: wip chat server">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="JsbtTreeLayoutManager">
    <layout place="tools.popupGrunt">
      <scroll-view-position x="0" y="0" />
    </layout>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2EWcUrHiADzd0qZP42jhtqHBgxC" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/v/lab-github/lab-golang&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/book/08_goroutines/limit" />
      <recent name="$PROJECT_DIR$/book/08_goroutines/barrier" />
      <recent name="$PROJECT_DIR$/04_duplicate_counter" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/10_interface/counter" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/select (2)">
    <configuration name="copy command" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="lab-golang" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="generation" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/05_copy_paste_files/copy_paste.go" />
      <output_directory value="$PROJECT_DIR$/05_copy_paste_files/" />
      <method v="2" />
    </configuration>
    <configuration name="generation comand" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="lab-golang" />
      <working_directory value="$PROJECT_DIR$/05_copy_paste_files" />
      <parameters value="generation 1000 ./generated" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/05_copy_paste_files/copy_paste.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build copy_paste.go" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="lab-golang" />
      <working_directory value="$PROJECT_DIR$/05_copy_paste_files/" />
      <parameters value="copy-folder ./generated ./backup" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/05_copy_paste_files/copy_paste.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/limit" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="lab-golang" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/forgeronvirtuel/labgolang/book/08_goroutines/limit" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/book/08_goroutines/limit/limit_goroutine.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/select (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="lab-golang" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/forgeronvirtuel/labgolang/book/08_goroutines/select" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/book/08_goroutines/select/select_one_goroutine.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/select (2)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="lab-golang" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/forgeronvirtuel/labgolang/book/08_goroutines/select" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/book/08_goroutines/select/select_default_example.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/select" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="lab-golang" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/forgeronvirtuel/labgolang/book/08_goroutines/select" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/book/08_goroutines/select/select_example.go" />
      <method v="2" />
    </configuration>
    <configuration name="BenchmarkCompute in github.com/forgeronvirtuel/labgolang/book/08_goroutines/limit" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lab-golang" />
      <working_directory value="$PROJECT_DIR$/book/08_goroutines/limit" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/forgeronvirtuel/labgolang/book/08_goroutines/limit" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <pattern value="^\QBenchmarkCompute\E$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build copy_paste.go" />
      <item itemvalue="Go Build.generation comand" />
      <item itemvalue="Go Build.copy command" />
      <item itemvalue="Go Build.go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/select (1)" />
      <item itemvalue="Go Build.go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/select (2)" />
      <item itemvalue="Go Build.go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/select" />
      <item itemvalue="Go Build.go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/limit" />
      <item itemvalue="Go Test.BenchmarkCompute in github.com/forgeronvirtuel/labgolang/book/08_goroutines/limit" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/select (2)" />
        <item itemvalue="Go Build.go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/select (1)" />
        <item itemvalue="Go Build.go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/select" />
        <item itemvalue="Go Build.go build github.com/forgeronvirtuel/labgolang/book/08_goroutines/limit" />
        <item itemvalue="Go Test.BenchmarkCompute in github.com/forgeronvirtuel/labgolang/book/08_goroutines/limit" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat: unidirectional channel" />
    <MESSAGE value="feat: buffered channels" />
    <MESSAGE value="example: concurrent misuse of len(ch)" />
    <MESSAGE value="example: producer/consumer with synchronization" />
    <MESSAGE value="example: concurrent barrier" />
    <MESSAGE value="example: leak goroutine" />
    <MESSAGE value="example: leak goroutine with memory check" />
    <MESSAGE value="example: using len in a concurrent context" />
    <MESSAGE value="example: don't use channels as a queue" />
    <MESSAGE value="example: barrier with sync.WaitGroup" />
    <MESSAGE value="example: limiting the number of goroutines" />
    <MESSAGE value="example: limiting the number of goroutines, v2" />
    <MESSAGE value="example: select with definition" />
    <MESSAGE value="example: default use case select" />
    <MESSAGE value="example: default use case select (better example)" />
    <MESSAGE value="example: crawler v1 concurrent" />
    <MESSAGE value="example: du program" />
    <MESSAGE value="example: concurrent version of crawler" />
    <MESSAGE value="example: concurrent version of walkdir" />
    <MESSAGE value="example: uses bool flag instead of goto" />
    <MESSAGE value="example: fix capnlen" />
    <MESSAGE value="example: wip echocli" />
    <MESSAGE value="example: better spinner example" />
    <MESSAGE value="example: weighted in progress" />
    <MESSAGE value="example: wip chat server" />
    <option name="LAST_COMMIT_MESSAGE" value="example: wip chat server" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/codewars/strings/weighted.go</url>
          <line>53</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>